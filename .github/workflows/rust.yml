name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/elementary/docker:stable

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y curl xvfb
    - name: Install stable rust
      id: install-rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - uses: actions/cache@v3
      with:
        path: |
          ./builddir/cargo-home
          ./target
        key: rust-${{ runner.os }}-${{ steps.install-rust.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          rust-${{ runner.os }}-${{ steps.install-rust.outputs.rustc_hash }}-
    - name: Build
      run: |
        meson setup builddir
        meson compile -C builddir
    - name: Run tests
      run: xvfb-run --auto-servernum meson test -C builddir

  format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install stable rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        components: rustfmt
    - name: Touch empty config file
      run: |
        echo "" >> src/config.rs
    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/elementary/docker:stable

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y curl
    - name: Install stable rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        components: clippy
    - name: Generate config.rs
      run: |
        meson setup builddir
    - name: Run cargo clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings

